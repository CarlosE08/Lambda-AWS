name: Build and Deploy Lambda with psycopg2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Lambda package in Amazon Linux 2 with Python 3.10
        run: |
          docker run --rm -v "$PWD":/app -w /app amazonlinux:2 bash -c "
            amazon-linux-extras enable python3.8 &&
            yum clean metadata &&
            yum install -y python3.8 gcc postgresql-devel python3-devel zip &&
            ln -sf /usr/bin/python3.8 /usr/bin/python3 &&
            ln -sf /usr/bin/pip3 /usr/bin/pip &&
            pip install psycopg2-binary -t python/ &&
            cp lambda_handler.py python/ &&
            cd python && zip -r9 /app/lambda.zip . &&
            echo 'âœ… lambda.zip generado con Python 3.8 compatible con AWS Lambda'
          "
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy code to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://lambda.zip

      - name: Wait for deployment to complete
        run: sleep 20

      - name: Update Lambda environment variables
        run: |
          aws lambda update-function-configuration \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --environment "Variables={
              DB_HOST='${{ secrets.DB_HOST }}',
              DB_PORT='${{ secrets.DB_PORT }}',
              DB_NAME='${{ secrets.DB_NAME }}',
              DB_USER='${{ secrets.DB_USER }}',
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            }"
